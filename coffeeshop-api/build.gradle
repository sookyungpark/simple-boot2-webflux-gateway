plugins {
    id "com.moowork.node" version "0.13"
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

version '1.0.0'
ext['snippetsDir'] = file('build/generated-snippets')

dependencies {
    implementation project(':coffeeshop-domain')

    implementation("org.springframework.cloud:spring-cloud-starter-gateway:3.1.2")

    // kotlin
    implementation(group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlinVersion)
    implementation(group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlinVersion)

    // etc
    implementation(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.+')

    implementation('com.auth0:java-jwt:3.2.0')
    implementation('io.dropwizard.metrics:metrics-core:4.1.0')

    implementation group: 'io.netty', name: 'netty-resolver-dns', version: '4.1.43.Final'
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.0'
    implementation group: 'com.google.guava', name: 'guava', version: 'r05'

    implementation group: 'org.jolokia', name: 'jolokia-core', version: '1.6.0'

    implementation('org.springframework.restdocs:spring-restdocs-restassured')
    implementation "org.springframework.restdocs:spring-restdocs-webtestclient:2.0.2.RELEASE"
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE"

    testImplementation 'junit:junit:4.12'
    testImplementation 'io.rest-assured:rest-assured:3.0.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.8.RELEASE'
    testImplementation 'com.squareup.okhttp3:okhttp:4.0.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test

    if(System.properties["spring.profiles.active"] == "ALPHA"
        || System.properties["spring.profiles.active"] == "LOCAL"
        || System.properties["spring.profiles.active"] == null) {

        def folder = new File("src/main/resources/public/docs")
        if(!folder.exists()){
            folder.mkdirs()
        }
        copy {
            from "${outputDir}/html5"
            into "src/main/resources/public/docs"

        }
    }
}

jar {
    //dependsOn asciidoctor
    archiveName "service-${project.name}.jar"
}

eclipseJdt.onlyIf { false }
cleanEclipseJdt.onlyIf { false }

bootRun {
    //dependsOn asciidoctor

    if(System.properties["spring.profiles.active"] == null) {
        systemProperty "spring.profiles.active", "LOCAL"
    } else {
        systemProperty "spring.profiles.active", System.properties["spring.profiles.active"]
    }

    systemProperty "server.port", System.properties["server.port"]
}
